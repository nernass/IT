```java
package com.cat.digital.SampleSpringbootTemplate.controllers;

import com.cat.digital.SampleSpringbootTemplate.config.Config;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.boot.test.web.client.TestRestTemplate;
import org.springframework.http.ResponseEntity;
import static org.junit.jupiter.api.Assertions.*;

@SpringBootTest(
    webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT,
    classes = com.cat.digital.SampleSpringbootTemplate.SampleSpringbootTemplateApplication.class
)
class HelloWorldControllerIntegrationTest {

    @Autowired
    private TestRestTemplate restTemplate;

    @MockBean
    private Config config;

    @Test
    void sayHello_validEnv_returnsFormattedMessage() {
        Mockito.when(config.getEnvName()).thenReturn("Production");
        
        ResponseEntity<String> response = restTemplate.getForEntity("/sayHello", String.class);
        
        assertEquals(200, response.getStatusCodeValue());
        assertEquals("Hello Production!", response.getBody());
    }

    @Test
    void sayHello_emptyEnv_returnsBasicGreeting() {
        Mockito.when(config.getEnvName()).thenReturn("");
        
        ResponseEntity<String> response = restTemplate.getForEntity("/sayHello", String.class);
        
        assertEquals("Hello !", response.getBody());
    }

    @Test
    void sayHello_configThrowsError_returnsServerError() {
        Mockito.when(config.getEnvName()).thenThrow(new RuntimeException("Config error"));
        
        ResponseEntity<String> response = restTemplate.getForEntity("/sayHello", String.class);
        
        assertEquals(500, response.getStatusCodeValue());
    }

    @Test
    void sayHello_longEnvName_handlesStringBuilder() {
        Mockito.when(config.getEnvName()).thenReturn("A".repeat(1000));
        
        ResponseEntity<String> response = restTemplate.getForEntity("/sayHello", String.class);
        
        assertTrue(response.getBody().endsWith("AAAAAAAA...!")); // Simplified for illustration
        assertEquals(200, response.getStatusCodeValue());
    }
}
```